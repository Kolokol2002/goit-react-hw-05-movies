{"version":3,"file":"static/js/840.43cf89c9.chunk.js","mappings":"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","sources":["api/moviesAPI.js","components/ButtonBack/ButtonBack.styled.js","components/ButtonBack/ButtonBack.jsx","pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\n// const API = '002ac4cc6a036cfbbfff9a5a8ca04d0d';\nconst URL_API = 'https://api.themoviedb.org/3';\nexport const URL_IMAGE = 'https://image.tmdb.org/t/p/w300';\n\nconst options = {\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwMDJhYzRjYzZhMDM2Y2ZiYmZmZjlhNWE4Y2EwNGQwZCIsInN1YiI6IjY0OTgzMTc0ZWI3OWMyMDExYzUyNTM2YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-TEUfSMT22rylGVayssYVadsdZf8E1XkK7mzvSTSGBo',\n  },\n};\n\nexport const getTopMovies = () => {\n  const URL = `${URL_API}/trending/movie/day?language=en-US`;\n  const response = axios.get(URL, options);\n  return response;\n};\n\nexport const getMovie = movie_id => {\n  const URL = `${URL_API}/movie/${movie_id}?language=en-US&external_source=imdb_id`;\n  const response = axios.get(URL, options);\n  return response;\n};\n\nexport const getCast = movie_id => {\n  const URL = `${URL_API}/movie/${movie_id}/credits?language=en-US`;\n  const response = axios.get(URL, options);\n  return response;\n};\n\nexport const getReviews = movie_id => {\n  const URL = `${URL_API}/movie/${movie_id}/reviews?language=en-US`;\n  const response = axios.get(URL, options);\n  return response;\n};\n\nexport const getMovies = value => {\n  const URL = `${URL_API}/search/movie?query=${value}&include_adult=true&language=en-US&page=1`;\n  const response = axios.get(URL, options);\n  return response;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ButtonBackLink = styled(Link)`\n  display: flex;\n  height: 3em;\n  width: 100px;\n  align-items: center;\n  justify-content: center;\n  background-color: #7d7d7d;\n  border-radius: 3px;\n  letter-spacing: 1px;\n  transition: all 0.2s linear;\n  cursor: pointer;\n  border: none;\n  margin-bottom: 33px;\n  color: #ffffff;\n  text-decoration: none;\n\n  & > svg {\n    fill: #ffffff;\n    margin-right: 5px;\n    margin-left: 5px;\n    font-size: 20px;\n    transition: all 0.4s ease-in;\n  }\n\n  &:hover > svg {\n    font-size: 1.2em;\n    transform: translateX(-5px);\n  }\n\n  &:hover {\n    box-shadow: 9px 9px 33px #d1d1d1, -9px -9px 33px #ffffff;\n    transform: translateY(-2px);\n  }\n`;\n","import { BsArrowLeft } from 'react-icons/bs';\nimport { ButtonBackLink } from './ButtonBack.styled';\n\nconst ButtonBack = ({ linkTo }) => {\n  return (\n    <ButtonBackLink to={linkTo}>\n      <BsArrowLeft />\n      <span>Back</span>\n    </ButtonBackLink>\n  );\n};\n\nexport default ButtonBack;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ContainerMain = styled.div``;\n\nexport const ContainerMovie = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const ContainerInfo = styled.div`\n  display: flex;\n  background-color: #cbcbcb;\n  width: fit-content;\n`;\n\nexport const ContainerInfoMovie = styled.div`\n  display: flex;\n`;\n\nexport const ImgMovie = styled.img`\n  margin-right: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const TitleMovie = styled.h2`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const SubTitleMovie = styled.p`\n  max-width: 500px;\n`;\n\nexport const LinkMovie = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  padding: 10px;\n\n  transition: background-color 0.4s cubic-bezier(0.08, 0.82, 0.44, 0.91);\n  &.active {\n    background-color: violet;\n  }\n  &:hover {\n    background-color: violet;\n  }\n`;\n","import { URL_IMAGE, getMovie } from 'api/moviesAPI';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\nimport React, { useRef } from 'react';\nimport { useQuery } from 'react-query';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  ContainerInfo,\n  ContainerInfoMovie,\n  ContainerMain,\n  ContainerMovie,\n  ImgMovie,\n  LinkMovie,\n  SubTitleMovie,\n  TitleMovie,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const { data, isError, isLoading, error } = useQuery(['movie', movieId], () =>\n    getMovie(movieId)\n  );\n\n  const { state } = useLocation();\n  const backLink = useRef(state?.from ?? '/movies');\n\n  if (isLoading) {\n    return <span>Loading...</span>;\n  }\n\n  if (isError) {\n    return <span>Error: {error.message}</span>;\n  }\n\n  const {\n    title,\n    overview,\n    poster_path,\n    genres,\n    production_countries,\n    release_date,\n    runtime,\n    vote_average,\n    vote_count,\n  } = data.data;\n\n  return (\n    <ContainerMain>\n      <ButtonBack linkTo={backLink.current}></ButtonBack>\n      <ContainerInfoMovie>\n        <ImgMovie\n          src={\n            poster_path\n              ? `${URL_IMAGE}${poster_path}`\n              : 'https://via.placeholder.com/300x450'\n          }\n          alt={title}\n        />\n        <ContainerMovie>\n          <TitleMovie>{title}</TitleMovie>\n          <span>\n            IMDB: {vote_average} ({vote_count})\n          </span>\n          <span>\n            Countries: {production_countries.map(({ name }) => name).join(',')}\n          </span>\n          <span>Genres: {genres.map(({ name }) => name).join(',')}</span>\n          <span>Realese: {release_date}</span>\n          <span>Run time: {runtime} minutes</span>\n          <SubTitleMovie>{overview}</SubTitleMovie>\n        </ContainerMovie>\n      </ContainerInfoMovie>\n      <ContainerInfo>\n        <LinkMovie to={'cast'}>Cast</LinkMovie>\n        <LinkMovie to={'reviews'}>Reviews</LinkMovie>\n      </ContainerInfo>\n      <Outlet />\n    </ContainerMain>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["URL_API","URL_IMAGE","options","headers","Authorization","getTopMovies","URL","axios","getMovie","movie_id","getCast","getReviews","getMovies","value","ButtonBackLink","styled","Link","linkTo","to","ContainerMain","ContainerMovie","ContainerInfo","ContainerInfoMovie","ImgMovie","TitleMovie","SubTitleMovie","LinkMovie","NavLink","movieId","useParams","useQuery","data","isError","isLoading","error","state","useLocation","backLink","useRef","from","message","title","overview","poster_path","genres","production_countries","release_date","runtime","vote_average","vote_count","ButtonBack","current","src","alt","map","name","join"],"sourceRoot":""}
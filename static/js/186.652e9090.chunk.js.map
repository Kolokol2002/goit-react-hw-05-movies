{"version":3,"file":"static/js/186.652e9090.chunk.js","mappings":"6SAGMA,EAAU,+BACHC,EAAY,kCAEnBC,EAAU,CACdC,QAAS,CACPC,cACE,+NAIOC,EAAe,WAC1B,IAAMC,EAAG,UAAMN,EAAN,sCAET,OADiBO,EAAAA,EAAAA,IAAUD,EAAKJ,EAEjC,EAEYM,EAAW,SAAAC,GACtB,IAAMH,EAAG,UAAMN,EAAN,kBAAuBS,EAAvB,2CAET,OADiBF,EAAAA,EAAAA,IAAUD,EAAKJ,EAEjC,EAEYQ,EAAU,SAAAD,GACrB,IAAMH,EAAG,UAAMN,EAAN,kBAAuBS,EAAvB,2BAET,OADiBF,EAAAA,EAAAA,IAAUD,EAAKJ,EAEjC,EAEYS,EAAa,SAAAF,GACxB,IAAMH,EAAG,UAAMN,EAAN,kBAAuBS,EAAvB,2BAET,OADiBF,EAAAA,EAAAA,IAAUD,EAAKJ,EAEjC,EAEYU,EAAY,SAAAC,GACvB,IAAMP,EAAG,UAAMN,EAAN,+BAAoCa,EAApC,6CAET,OADiBN,EAAAA,EAAAA,IAAUD,EAAKJ,EAEjC,C,iFCRD,UA5BgB,WACd,IAAQY,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,CAAC,UAAWF,IAAU,kBACzDH,EAAAA,EAAAA,IAAWG,EAD8C,IAAnDG,EAAR,EAAQA,KAIR,GAJA,EAAcC,UAKZ,OAAO,0BAAM,eAGf,IAAMC,EAAeF,EAAKA,KAAKG,QAE/B,OAAKD,EAAaE,QAId,wBACGF,EAAaG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OAChB,2BACE,0BAAI,WAASA,MACb,uBAAID,MAFGD,EADO,OAJf,wBAAI,4CAad,C","sources":["api/moviesAPI.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n// const API = '002ac4cc6a036cfbbfff9a5a8ca04d0d';\nconst URL_API = 'https://api.themoviedb.org/3';\nexport const URL_IMAGE = 'https://image.tmdb.org/t/p/w300';\n\nconst options = {\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwMDJhYzRjYzZhMDM2Y2ZiYmZmZjlhNWE4Y2EwNGQwZCIsInN1YiI6IjY0OTgzMTc0ZWI3OWMyMDExYzUyNTM2YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-TEUfSMT22rylGVayssYVadsdZf8E1XkK7mzvSTSGBo',\n  },\n};\n\nexport const getTopMovies = () => {\n  const URL = `${URL_API}/trending/movie/day?language=en-US`;\n  const response = axios.get(URL, options);\n  return response;\n};\n\nexport const getMovie = movie_id => {\n  const URL = `${URL_API}/movie/${movie_id}?language=en-US&external_source=imdb_id`;\n  const response = axios.get(URL, options);\n  return response;\n};\n\nexport const getCast = movie_id => {\n  const URL = `${URL_API}/movie/${movie_id}/credits?language=en-US`;\n  const response = axios.get(URL, options);\n  return response;\n};\n\nexport const getReviews = movie_id => {\n  const URL = `${URL_API}/movie/${movie_id}/reviews?language=en-US`;\n  const response = axios.get(URL, options);\n  return response;\n};\n\nexport const getMovies = value => {\n  const URL = `${URL_API}/search/movie?query=${value}&include_adult=true&language=en-US&page=1`;\n  const response = axios.get(URL, options);\n  return response;\n};\n","import { getReviews } from 'api/moviesAPI';\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { data, isLoading } = useQuery(['reviews', movieId], () =>\n    getReviews(movieId)\n  );\n\n  if (isLoading) {\n    return <span>Loading...</span>;\n  }\n\n  const movieReviews = data.data.results;\n\n  if (!movieReviews.length) {\n    return <h3>We don't have any reviews for this movie</h3>;\n  } else {\n    return (\n      <ul>\n        {movieReviews.map(({ id, content, author }) => (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default Reviews;\n"],"names":["URL_API","URL_IMAGE","options","headers","Authorization","getTopMovies","URL","axios","getMovie","movie_id","getCast","getReviews","getMovies","value","movieId","useParams","useQuery","data","isLoading","movieReviews","results","length","map","id","content","author"],"sourceRoot":""}
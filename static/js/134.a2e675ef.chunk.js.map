{"version":3,"file":"static/js/134.a2e675ef.chunk.js","mappings":"6SAGMA,EAAU,+BACHC,EAAY,kCAEnBC,EAAU,CACdC,QAAS,CACPC,cACE,+NAIOC,EAAe,WAC1B,IAAMC,EAAG,UAAMN,EAAN,sCAET,OADiBO,EAAAA,EAAAA,IAAUD,EAAKJ,EAEjC,EAEYM,EAAW,SAAAC,GACtB,IAAMH,EAAG,UAAMN,EAAN,kBAAuBS,EAAvB,2CAET,OADiBF,EAAAA,EAAAA,IAAUD,EAAKJ,EAEjC,EAEYQ,EAAU,SAAAD,GACrB,IAAMH,EAAG,UAAMN,EAAN,kBAAuBS,EAAvB,2BAET,OADiBF,EAAAA,EAAAA,IAAUD,EAAKJ,EAEjC,EAEYS,EAAa,SAAAF,GACxB,IAAMH,EAAG,UAAMN,EAAN,kBAAuBS,EAAvB,2BAET,OADiBF,EAAAA,EAAAA,IAAUD,EAAKJ,EAEjC,EAEYU,EAAY,SAAAC,GACvB,IAAMP,EAAG,UAAMN,EAAN,+BAAoCa,EAApC,6CAET,OADiBN,EAAAA,EAAAA,IAAUD,EAAKJ,EAEjC,C,0FCtCYY,GAAiBC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,8qB,SCS3B,EATmB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACpB,OACE,UAACH,EAAD,CAAgBI,GAAID,EAApB,WACE,SAAC,MAAD,KACA,0BAAM,WAGX,C,iECuBD,IAxBoB,SAAC,GAA2B,IAAzBE,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC9B,OACE,SAAC,KAAD,UACGD,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,GAAvB,OACX,SAAC,KAAD,WACE,UAAC,KAAD,CAAUN,GAAE,kBAAaM,GAAMC,MAAO,CAAEC,KAAMN,GAA9C,WACE,0BACE,SAAC,KAAD,CACEO,IACEJ,EAAW,UACJtB,EAAAA,IADI,OACQsB,GACf,sCAENK,IAAKN,OAGT,wBAAKA,QAZEE,EADA,KAmBlB,C,yKC5BYK,EAAQd,EAAAA,GAAAA,GAAH,oJASLe,EAAOf,EAAAA,GAAAA,GAAH,+JASJgB,EAAYhB,EAAAA,GAAAA,IAAH,6KAUTiB,GAAWjB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,oO,gHCiBrB,UAzCe,WACb,OAAwCkB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,UAEpC,GAA4CC,EAAAA,EAAAA,UAC1C,CAAC,SAAUF,IACX,kBAAMxB,EAAAA,EAAAA,IAAUwB,EAAhB,IAFMG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,MAK5BtB,GAAWuB,EAAAA,EAAAA,MAEjB,GAAIF,EACF,OAAO,0BAAM,eAGf,GAAID,EACF,OAAO,4BAAM,UAAQE,EAAME,WAG7B,IAMQzB,EAAYoB,EAAKA,KAAjBpB,QAER,OACE,iCACE,SAAC,IAAD,CAAYF,OAAQ,OAEpB,kBAAM4B,SAZO,SAAAC,GACfA,EAAEC,iBACFZ,EAAgB,CAAEa,OAAQF,EAAEG,OAAOC,SAASF,OAAOnC,OACpD,EASG,WACE,kBAAOsC,aAAcf,EAAYgB,KAAK,SAASC,KAAK,UACpD,mBAAQA,KAAK,SAAb,SAAsB,cAGvBjB,IAAc,SAAC,IAAD,CAAajB,QAASA,EAASC,SAAUA,MAG7D,C","sources":["api/moviesAPI.js","components/ButtonBack/ButtonBack.styled.js","components/ButtonBack/ButtonBack.jsx","components/MoviesCards/MoviesCards.jsx","components/MoviesCards/MoviesCards.styled.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\n// const API = '002ac4cc6a036cfbbfff9a5a8ca04d0d';\nconst URL_API = 'https://api.themoviedb.org/3';\nexport const URL_IMAGE = 'https://image.tmdb.org/t/p/w300';\n\nconst options = {\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwMDJhYzRjYzZhMDM2Y2ZiYmZmZjlhNWE4Y2EwNGQwZCIsInN1YiI6IjY0OTgzMTc0ZWI3OWMyMDExYzUyNTM2YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-TEUfSMT22rylGVayssYVadsdZf8E1XkK7mzvSTSGBo',\n  },\n};\n\nexport const getTopMovies = () => {\n  const URL = `${URL_API}/trending/movie/day?language=en-US`;\n  const response = axios.get(URL, options);\n  return response;\n};\n\nexport const getMovie = movie_id => {\n  const URL = `${URL_API}/movie/${movie_id}?language=en-US&external_source=imdb_id`;\n  const response = axios.get(URL, options);\n  return response;\n};\n\nexport const getCast = movie_id => {\n  const URL = `${URL_API}/movie/${movie_id}/credits?language=en-US`;\n  const response = axios.get(URL, options);\n  return response;\n};\n\nexport const getReviews = movie_id => {\n  const URL = `${URL_API}/movie/${movie_id}/reviews?language=en-US`;\n  const response = axios.get(URL, options);\n  return response;\n};\n\nexport const getMovies = value => {\n  const URL = `${URL_API}/search/movie?query=${value}&include_adult=true&language=en-US&page=1`;\n  const response = axios.get(URL, options);\n  return response;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ButtonBackLink = styled(Link)`\n  display: flex;\n  height: 3em;\n  width: 100px;\n  align-items: center;\n  justify-content: center;\n  background-color: #7d7d7d;\n  border-radius: 3px;\n  letter-spacing: 1px;\n  transition: all 0.2s linear;\n  cursor: pointer;\n  border: none;\n  margin-bottom: 33px;\n  color: #ffffff;\n  text-decoration: none;\n\n  & > svg {\n    fill: #ffffff;\n    margin-right: 5px;\n    margin-left: 5px;\n    font-size: 20px;\n    transition: all 0.4s ease-in;\n  }\n\n  &:hover > svg {\n    font-size: 1.2em;\n    transform: translateX(-5px);\n  }\n\n  &:hover {\n    box-shadow: 9px 9px 33px #d1d1d1, -9px -9px 33px #ffffff;\n    transform: translateY(-2px);\n  }\n`;\n","import { BsArrowLeft } from 'react-icons/bs';\nimport { ButtonBackLink } from './ButtonBack.styled';\n\nconst ButtonBack = ({ linkTo }) => {\n  return (\n    <ButtonBackLink to={linkTo}>\n      <BsArrowLeft />\n      <span>Back</span>\n    </ButtonBackLink>\n  );\n};\n\nexport default ButtonBack;\n","import { URL_IMAGE } from 'api/moviesAPI';\nimport {\n  Card,\n  CardImage,\n  CardLink,\n  Cards,\n} from 'components/MoviesCards/MoviesCards.styled';\nimport React from 'react';\n\nconst MoviesCards = ({ results, location }) => {\n  return (\n    <Cards>\n      {results.map(({ title, poster_path, id }) => (\n        <Card key={id}>\n          <CardLink to={`/movies/${id}`} state={{ from: location }}>\n            <div>\n              <CardImage\n                src={\n                  poster_path\n                    ? `${URL_IMAGE}${poster_path}`\n                    : 'https://via.placeholder.com/300x450'\n                }\n                alt={title}\n              />\n            </div>\n            <h2>{title}</h2>\n          </CardLink>\n        </Card>\n      ))}\n    </Cards>\n  );\n};\n\nexport default MoviesCards;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Cards = styled.ul`\n  display: flex;\n  margin: 0;\n  padding: 20px 50px;\n  flex-wrap: wrap;\n  gap: 40px;\n  justify-content: space-between;\n`;\n\nexport const Card = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 200px;\n  border: solid 2px black;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const CardImage = styled.img`\n  width: 100%;\n  object-fit: cover;\n\n  transition: transform 0.3s cubic-bezier(0.23, 1, 0.32, 1);\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const CardLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  height: 100%;\n\n  & h2 {\n    display: block;\n    padding: 10px 5px;\n    font-size: 15px;\n  }\n\n  & div {\n    height: 300px;\n    overflow: hidden;\n  }\n`;\n","import { getMovies } from 'api/moviesAPI';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\nimport { useQuery } from 'react-query';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport MoviesCards from 'components/MoviesCards/MoviesCards';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const valueInput = searchParams.get('search');\n\n  const { data, isError, isLoading, error } = useQuery(\n    ['movies', valueInput],\n    () => getMovies(valueInput)\n  );\n\n  const location = useLocation();\n\n  if (isLoading) {\n    return <span>Loading...</span>;\n  }\n\n  if (isError) {\n    return <span>Error: {error.message}</span>;\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ search: e.target.children.search.value });\n  };\n\n  // const { results, page, total_pages, total_results } = data.data;\n  const { results } = data.data;\n\n  return (\n    <>\n      <ButtonBack linkTo={'/'} />\n\n      <form onSubmit={onSubmit}>\n        <input defaultValue={valueInput} name=\"search\" type=\"text\"></input>\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {valueInput && <MoviesCards results={results} location={location} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["URL_API","URL_IMAGE","options","headers","Authorization","getTopMovies","URL","axios","getMovie","movie_id","getCast","getReviews","getMovies","value","ButtonBackLink","styled","Link","linkTo","to","results","location","map","title","poster_path","id","state","from","src","alt","Cards","Card","CardImage","CardLink","useSearchParams","searchParams","setSearchParams","valueInput","get","useQuery","data","isError","isLoading","error","useLocation","message","onSubmit","e","preventDefault","search","target","children","defaultValue","name","type"],"sourceRoot":""}